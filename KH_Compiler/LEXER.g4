lexer grammar LEXER;
DESIGIN:' '* 'desigin' ' '*;
INTERFACE:' '* 'interface' ' '*;
PAINT:' '* 'paint' ' '*;
COLOR_NAME:' '* ('Tomato'|'blue'|'Violet') ' '*;
ENTER:' '* 'enter' ' '*;
PAGE:' '* 'page' ' '*;
CULL:' '*'cull' ' '*;
PARAM:' '* 'param' ' '*;
PART1:' '* 'part1' ' '*;
PART2:' '* 'part2' ' '*;
PART3:' '* 'part3' ' '*;
IF:' '* 'if' ' '*;
FOR:' '* 'for' ' '*;
DECLER:' '* 'decler' ' '*;
SETTING :' '* 'setting' ' '*;
FUNCTION:' '* 'function' ' '*;
CONTROLLER:' '* 'controller' ' '*;
CONTROL:' '* 'control' ' '*;
DISPLAY:' '*'display'' '*;
SUBMIT:' '* 'submit' ' '*;
FIELD:' '* 'field' ' '*;
CHECK_BOX:' '*'check' ' '*;
RADIO:' '*'radio'' '*;
TEXT:' '* 'text' ' '*;
IMAGE:' '* 'image' ' '*;
LINK:' '* 'link' ' '*;
LIST:' '* 'list' ' '*;
COLOMN:' '* ':' ' '*;
COMA:' '* ',' ' '*;
CURLYOPEN: ' '* '{' ' '*;
CURLYCLOSE: ' '* '}' ' '*;
BRACOPEN: ' '* '(' ' '* ;
BRACCLOSE: ' '* ')' ' '* ;
String: '"' ~[/"]*  '"';
URL:' '*'\''~['"<>()' ']+' '*'\''' '*;
TAG_WHITESPACE:[ \t\r\n] -> channel(HIDDEN);
WRITE:' '* 'print'' '*;
WRITEE:' '* 'write' ' '*;
NAME:VARNAMEE;
LI:' '* '#' ' '*;
NUMBER:  ' '* DIGIT+ ' '* ;
SIGNAL:' '* '+='|'+'|'-='|'-'|'/='|'*='|'*'|'/'|'--'|'++' ' '*;
EQUAL:' '*'=' ' '*;
COMPARISON:' '*('=='|'!='|'<'|'>'|'<='|'>=')' '*;
fragment VARNAMEE: ' '* [a-zA-Z_] [a-zA-Z0-9_]* ' '*;
fragment
DIGIT: [0-9];